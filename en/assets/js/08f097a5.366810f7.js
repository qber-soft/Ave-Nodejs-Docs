(self.webpackChunknode_ave_docs=self.webpackChunknode_ave_docs||[]).push([[707],{3905:function(t,n,e){"use strict";e.d(n,{Zo:function(){return s},kt:function(){return m}});var o=e(7294);function r(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function i(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,o)}return e}function a(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?i(Object(e),!0).forEach((function(n){r(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):i(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}function u(t,n){if(null==t)return{};var e,o,r=function(t,n){if(null==t)return{};var e,o,r={},i=Object.keys(t);for(o=0;o<i.length;o++)e=i[o],n.indexOf(e)>=0||(r[e]=t[e]);return r}(t,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(o=0;o<i.length;o++)e=i[o],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(r[e]=t[e])}return r}var l=o.createContext({}),c=function(t){var n=o.useContext(l),e=n;return t&&(e="function"==typeof t?t(n):a(a({},n),t)),e},s=function(t){var n=c(t.components);return o.createElement(l.Provider,{value:n},t.children)},d={inlineCode:"code",wrapper:function(t){var n=t.children;return o.createElement(o.Fragment,{},n)}},p=o.forwardRef((function(t,n){var e=t.components,r=t.mdxType,i=t.originalType,l=t.parentName,s=u(t,["components","mdxType","originalType","parentName"]),p=c(e),m=r,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||i;return e?o.createElement(f,a(a({ref:n},s),{},{components:e})):o.createElement(f,a({ref:n},s))}));function m(t,n){var e=arguments,r=n&&n.mdxType;if("string"==typeof t||r){var i=e.length,a=new Array(i);a[0]=p;var u={};for(var l in n)hasOwnProperty.call(n,l)&&(u[l]=n[l]);u.originalType=t,u.mdxType="string"==typeof t?t:r,a[1]=u;for(var c=2;c<i;c++)a[c]=e[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,e)}p.displayName="MDXCreateElement"},9619:function(t,n,e){"use strict";e.r(n),e.d(n,{frontMatter:function(){return u},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return s},default:function(){return p}});var o=e(2122),r=e(9756),i=(e(7294),e(3905)),a=["components"],u={id:"button",title:"Button"},l=void 0,c={unversionedId:"button",id:"button",isDocsHomePage:!1,title:"Button",description:"Examples",source:"@site/docs/button.md",sourceDirName:".",slug:"/button",permalink:"/Ave-Nodejs-Docs/en/button",version:"current",frontMatter:{id:"button",title:"Button"},sidebar:"components",previous:{title:"Layout",permalink:"/Ave-Nodejs-Docs/en/layout"},next:{title:"ComboBox",permalink:"/Ave-Nodejs-Docs/en/combo-box"}},s=[{value:"Examples",id:"examples",children:[{value:"Set Text",id:"example-set-text",children:[]},{value:"Text Color",id:"example-set-text-color",children:[]},{value:"Button Style",id:"example-button-style",children:[]},{value:"Click Event",id:"example-button-event-click",children:[]},{value:"Button Icon",id:"example-set-icon",children:[]}]}],d={toc:s};function p(t){var n=t.components,u=(0,r.Z)(t,a);return(0,i.kt)("wrapper",(0,o.Z)({},d,u,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("h3",{id:"example-set-text"},"Set Text"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{5}","{5}":!0},"import { Window, Button } from 'ave-ui';\n\nexport function main(window: Window) {\n    const button = new Button(window);\n    button.SetText('Button');\n\n    const container = getControlDemoContainer(window);\n    container.ControlAdd(button).SetGrid(1, 1);\n    window.SetContent(container);\n}\n\n// boilerplate code: place control at the center of window\nexport function getControlDemoContainer(window: Window, count = 1) {\n    const container = new Grid(window);\n    container.ColAddSlice(1);\n    container.ColAddDpx(...Array.from<number>({ length: count }).fill(120));\n    container.ColAddSlice(1);\n\n    container.RowAddSlice(1);\n    container.RowAddDpx(...Array.from<number>({ length: count }).fill(32));\n    container.RowAddSlice(1);\n    return container;\n}\n")),(0,i.kt)("p",null,':) Button with text "Button":'),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"button set text",src:e(2007).Z})),(0,i.kt)("h4",{id:"api-button-set-text"},"API"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface IButton extends IControl {\n    SetText(text: string): IButton;\n    GetText(): string;\n}\n")),(0,i.kt)("h3",{id:"example-set-text-color"},"Text Color"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{7,8}","{7,8}":!0},"import { Window, Button, Vec4 } from 'ave-ui';\n\nexport function main(window: Window) {\n    const button = new Button(window);\n    button.SetText('Button');\n\n    const lightBlue = new Vec4(0, 146, 255, 255 * 0.75);\n    button.SetTextColor(lightBlue);\n\n    const container = getControlDemoContainer(window);\n    container.ControlAdd(button).SetGrid(1, 1);\n    window.SetContent(container);\n}\n")),(0,i.kt)("p",null,"Light blue button text:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"button text color",src:e(583).Z})),(0,i.kt)("h4",{id:"api-button-text-color"},"API"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface IButton extends IControl {\n    SetTextColor(color: Vec4): IControl;\n    GetTextColor(): Vec4;\n}\n")),(0,i.kt)("h3",{id:"example-button-style"},"Button Style"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{9,16}","{9,16}":!0},"import { Window, Button, ButtonStyle } from 'ave-ui';\n\nexport function main(window: Window) {\n    const container = getControlDemoContainer(window, 3);\n\n    {\n        const button = new Button(window);\n        button.SetText('Button');\n        button.SetButtonStyle(ButtonStyle.Command);\n        container.ControlAdd(button).SetGrid(1, 1);\n    }\n\n    {\n        const button = new Button(window);\n        button.SetText('Button');\n        button.SetButtonStyle(ButtonStyle.Push);\n        container.ControlAdd(button).SetGrid(3, 1);\n    }\n\n    window.SetContent(container);\n}\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"ButtonStyle.Command: no depth effect, just plain button"),(0,i.kt)("li",{parentName:"ul"},"ButtonStyle.Push: likes real button, with feedback of depth effect when you press it")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"button style",src:e(2427).Z})),(0,i.kt)("h4",{id:"api-button-style"},"API"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface IButton extends IControl {\n    SetButtonStyle(style: ButtonStyle): IButton;\n    GetButtonStyle(): ButtonStyle;\n}\n\nexport enum ButtonStyle {\n    Push,\n    Command,\n}\n")),(0,i.kt)("h3",{id:"example-button-event-click"},"Click Event"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{6-8}","{6-8}":!0},"import { Window, Button } from 'ave-ui';\n\nexport function main(window: Window) {\n    const button = new Button(window);\n    button.SetText('Button');\n    button.OnClick((sender) => {\n        sender.SetText('Button Clicked');\n    });\n\n    const container = getControlDemoContainer(window);\n    container.ControlAdd(button).SetGrid(1, 1);\n    window.SetContent(container);\n}\n")),(0,i.kt)("p",null,"Click and set text:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"button event click",src:e(6696).Z})),(0,i.kt)("h4",{id:"api-button-event-click"},"API"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface IButton extends IControl {\n    OnClick(callback: (sender: IButton) => void): IButton;\n}\n")),(0,i.kt)("h3",{id:"example-set-icon"},"Button Icon"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{7-10}","{7-10}":!0},"import { Window, Button, IconSource, VisualTextLayout } from 'ave-ui';\nimport { ResId } from '../ResId';\n\nexport function main(window: Window) {\n    const button = new Button(window);\n    button.SetText('Open');\n    button.SetVisualTextLayout(VisualTextLayout.HorzVisualText);\n    button.SetVisual(\n        window.CreateManagedIcon(new IconSource(ResId.Icon_FileOpen_png, 16)),\n    );\n\n    const container = getControlDemoContainer(window);\n    container.ControlAdd(button).SetGrid(1, 1);\n    window.SetContent(container);\n}\n")),(0,i.kt)("p",null,"You can add icon alongside text:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"button set icon",src:e(3289).Z})),(0,i.kt)("h4",{id:"api-set-icon"},"API"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface IButton extends IControl {\n    SetVisualTextLayout(n: VisualTextLayout): Button;\n    GetVisualTextLayout(): VisualTextLayout;\n\n    SetVisual(v: IVisual): IVisual;\n    GetVisual(): IVisual;\n}\n")))}p.isMDXComponent=!0},6696:function(t,n,e){"use strict";n.Z=e.p+"assets/images/button-event-click-418d5d9eb2a8ea061b4228248aa46f0c.gif"},3289:function(t,n,e){"use strict";n.Z=e.p+"assets/images/button-set-icon-7df1ffbcf7134ea480b0ad301d31392f.png"},2007:function(t,n,e){"use strict";n.Z=e.p+"assets/images/button-set-text-896efc9135f2d3c726add01f7b95255d.png"},2427:function(t,n,e){"use strict";n.Z=e.p+"assets/images/button-style-dec5deee21cfef98dd17656a34a81767.gif"},583:function(t,n,e){"use strict";n.Z=e.p+"assets/images/button-text-color-e38971a5e4f1c8cf517fccff2695644c.png"}}]);